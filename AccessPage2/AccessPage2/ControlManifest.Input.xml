<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="NamespacePlaceholder" constructor="AccessPage" version="0.3.230" display-name-key="AccessPage" description-key="AccessPage description" control-type="virtual" >
    
    <external-service-usage enabled="false">
    
    </external-service-usage>

    <data-set name="groupMembers" display-name-key="groupMembers">
    
    </data-set>

    <data-set name="groupOwners" display-name-key="groupOwners">
    
    </data-set>

    <data-set name="usersList" display-name-key="usersList">
    
    </data-set>

    <data-set name="navItems" display-name-key="navItems">
     
    </data-set>


    <property name="sidebarWidth" display-name-key="sidebarWidth" of-type="Whole.None" usage="input" pfx-default-value ='App.Width * .1'/>
    <property name="headerText" display-name-key="headerText" of-type="SingleLine.Text" usage="input" default-value = "Access control for"/>
    <property name="userSearchString" display-name-key="userSearchString" of-type="SingleLine.Text" usage="output"/>
    <property name="selectedNewUserID" display-name-key="selectedNewUserID" of-type="SingleLine.Text" usage="output" default-value = ""/>
    <property name="selectedNewUserMail" display-name-key="selectedNewUserMail" of-type="SingleLine.Text" usage="output" default-value = ""/>
    <property name="containerWidth" display-name-key = "containerWidth" of-type="Whole.None" usage="input" pfx-default-value ='Self.Width'/>
    <property name="containerHeight" display-name-key = "containerHeight" of-type="Whole.None" usage="input" pfx-default-value ='Self.Height'/>
    <property name="useTestData" display-name-key = "useTestData" of-type= "TwoOptions" usage="input" default-value = "false"/>
    <property name="userListDisplayField" display-name-key = "userListDisplayField" of-type= "SingleLine.Text" usage="input" default-value = "displayName"/>


   <property name="outputScreenName" display-name-key="outputScreenName" of-type="SingleLine.Text" usage="output" hidden="false" default-value="App.ActiveScreen.Name"/>
  <property name="changeType" display-name-key="changeType" of-type="SingleLine.Text" usage="output" hidden="false" default-value=""/>
  <property name="activeScreen" display-name-key="activeScreen" of-type="SingleLine.Text" usage="input" hidden="false" default-value = "App.ActiveScreen.Name"/>
  <property name="userImage" display-name-key="userImage" of-type="SingleLine.Text" usage="input" hidden="false" default-value=""/>
  <property name="userName" display-name-key="userName" of-type="SingleLine.Text" usage="input" hidden="false" default-value=""/>
  <property name="iconColor" display-name-key="iconColor" of-type="SingleLine.Text" usage="input" hidden="false" default-value=""/>

    <event name="onDeleteUsersFromGroup"
   pfx-default-value=''
   display-name-key="onDeleteUsersFromGroup"
   description-key="onDeleteUsersFromGroup"/>

    <event name="onAddMemberToGroup"
   pfx-default-value=''
   display-name-key="onAddMemberToGroup"
   description-key="onAddMemberToGroup"/>

     <event name="onAddOwnerToGroup"
   pfx-default-value=''
   display-name-key="onAddOwnerToGroup"
   description-key="onAddOwnerToGroup"/>

 <event name = 'onOptionSelected' display-name-key='onOptionSelected' description-key='onOptionSelected' pfx-default-value = 'Notify("No formula", NotificationType.Error, 2000)'/>

    


    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.14.0" />
      <css path = "../../dist/output.css" order = "1"/>
      
    </resources>
    
  </control>
</manifest>
